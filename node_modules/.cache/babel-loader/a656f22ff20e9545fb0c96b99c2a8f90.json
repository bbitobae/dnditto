{"ast":null,"code":"var _jsxFileName = \"/home/user/project/dnditto/src/Dnditto.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useCallback, useMemo, useState } from 'react';\nimport EntityGroup from './EntityGroup/EntityGroup';\nimport data from './entities.json';\nimport Player from './Models/Player';\nimport NPC from './Models/NPC';\nimport './Dnditto.scss';\nimport Navbar from \"./Navbar/Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ActivityContext = /*#__PURE__*/createContext({\n  currentAction: \"\",\n  setActionCallback: (attacking, healing) => {\n    console.log(`${attacking}\\t======\\t${healing}`);\n  }\n});\n_c = ActivityContext;\nexport default function Dnditto() {\n  _s();\n\n  const [currentAction, setCurrentAction] = useState(\"selected\");\n  const setActionCallback = useCallback((attacking, healing) => {\n    console.log(`${attacking} +++++ ${healing}`);\n\n    if (attacking) {\n      setCurrentAction(\"attack\");\n    } else if (healing) {\n      setCurrentAction(\"heal\");\n    } else {\n      setCurrentAction(\"selected\");\n    }\n  }, [setCurrentAction]);\n  const activityContext = useMemo(() => ({\n    currentAction: \"\",\n    setActionCallback: setActionCallback\n  }), [currentAction, setActionCallback]);\n\n  const loadData = () => {\n    return data.entities.map(entity => {\n      if (entity.player) {\n        return new Player(entity.id, entity.name, entity.initiative, entity.hp, entity.ac, entity.level, entity.class, entity.race, entity.alignment);\n      } else {\n        return new NPC(entity.id, entity.name, entity.initiative, entity.hp, entity.ac);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dnditto\",\n    children: /*#__PURE__*/_jsxDEV(ActivityContext, {\n      value: activityContext,\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EntityGroup, {\n        entities: loadData()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Dnditto, \"1JkqAkiw7y9MbxaYp+8uexzZh5U=\");\n\n_c2 = Dnditto;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ActivityContext\");\n$RefreshReg$(_c2, \"Dnditto\");","map":{"version":3,"names":["React","createContext","useCallback","useMemo","useState","EntityGroup","data","Player","NPC","Navbar","ActivityContext","currentAction","setActionCallback","attacking","healing","console","log","Dnditto","setCurrentAction","activityContext","loadData","entities","map","entity","player","id","name","initiative","hp","ac","level","class","race","alignment"],"sources":["/home/user/project/dnditto/src/Dnditto.tsx"],"sourcesContent":["import React, {Component, createContext, useCallback, useMemo, useState} from 'react';\nimport EntityGroup from './EntityGroup/EntityGroup'\nimport data from './entities.json'\nimport Player from './Models/Player';\nimport NPC from './Models/NPC';\nimport Character from './Models/Character';\nimport './Dnditto.scss'\nimport Navbar from \"./Navbar/Navbar\";\n\nexport const ActivityContext = createContext({\n    currentAction: \"\",\n    setActionCallback: (attacking: boolean, healing: boolean) => { console.log(`${attacking}\\t======\\t${healing}`)}\n})\n\nexport default function Dnditto() {\n\n    const [currentAction, setCurrentAction] = useState(\"selected\")\n    const setActionCallback = useCallback((attacking: boolean, healing: boolean): void => {\n        console.log(`${attacking} +++++ ${healing}`)\n        if (attacking) {\n            setCurrentAction(\"attack\")\n        } else if (healing) {\n            setCurrentAction(\"heal\")\n        } else {\n            setCurrentAction(\"selected\")\n        }\n    }, [setCurrentAction])\n    const activityContext = useMemo(\n        () => ({\n            currentAction: \"\",\n            setActionCallback: setActionCallback\n        }), [ currentAction, setActionCallback ]\n    )\n\n\n    const loadData = (): Array<Character> => {\n        return data.entities.map(entity => {\n            if(entity.player) {\n                return new Player(\n                    entity.id,\n                    entity.name,\n                    entity.initiative,\n                    entity.hp,\n                    entity.ac,\n                    entity.level,\n                    entity.class,\n                    entity.race,\n                    entity.alignment)\n            }\n            else {\n                return new NPC(entity.id, entity.name, entity.initiative, entity.hp, entity.ac)\n            }\n        })\n    }\n\n    return(\n        <div className=\"dnditto\">\n            <ActivityContext value={activityContext}>\n                <Navbar />\n                <EntityGroup {...{entities: loadData()}} />\n            </ActivityContext>\n\n        </div>\n    )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAA0BC,aAA1B,EAAyCC,WAAzC,EAAsDC,OAAtD,EAA+DC,QAA/D,QAA8E,OAA9E;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AAEA,OAAO,gBAAP;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,OAAO,MAAMC,eAAe,gBAAGT,aAAa,CAAC;EACzCU,aAAa,EAAE,EAD0B;EAEzCC,iBAAiB,EAAE,CAACC,SAAD,EAAqBC,OAArB,KAA0C;IAAEC,OAAO,CAACC,GAAR,CAAa,GAAEH,SAAU,aAAYC,OAAQ,EAA7C;EAAgD;AAFtE,CAAD,CAArC;KAAMJ,e;AAKb,eAAe,SAASO,OAAT,GAAmB;EAAA;;EAE9B,MAAM,CAACN,aAAD,EAAgBO,gBAAhB,IAAoCd,QAAQ,CAAC,UAAD,CAAlD;EACA,MAAMQ,iBAAiB,GAAGV,WAAW,CAAC,CAACW,SAAD,EAAqBC,OAArB,KAAgD;IAClFC,OAAO,CAACC,GAAR,CAAa,GAAEH,SAAU,UAASC,OAAQ,EAA1C;;IACA,IAAID,SAAJ,EAAe;MACXK,gBAAgB,CAAC,QAAD,CAAhB;IACH,CAFD,MAEO,IAAIJ,OAAJ,EAAa;MAChBI,gBAAgB,CAAC,MAAD,CAAhB;IACH,CAFM,MAEA;MACHA,gBAAgB,CAAC,UAAD,CAAhB;IACH;EACJ,CAToC,EASlC,CAACA,gBAAD,CATkC,CAArC;EAUA,MAAMC,eAAe,GAAGhB,OAAO,CAC3B,OAAO;IACHQ,aAAa,EAAE,EADZ;IAEHC,iBAAiB,EAAEA;EAFhB,CAAP,CAD2B,EAIvB,CAAED,aAAF,EAAiBC,iBAAjB,CAJuB,CAA/B;;EAQA,MAAMQ,QAAQ,GAAG,MAAwB;IACrC,OAAOd,IAAI,CAACe,QAAL,CAAcC,GAAd,CAAkBC,MAAM,IAAI;MAC/B,IAAGA,MAAM,CAACC,MAAV,EAAkB;QACd,OAAO,IAAIjB,MAAJ,CACHgB,MAAM,CAACE,EADJ,EAEHF,MAAM,CAACG,IAFJ,EAGHH,MAAM,CAACI,UAHJ,EAIHJ,MAAM,CAACK,EAJJ,EAKHL,MAAM,CAACM,EALJ,EAMHN,MAAM,CAACO,KANJ,EAOHP,MAAM,CAACQ,KAPJ,EAQHR,MAAM,CAACS,IARJ,EASHT,MAAM,CAACU,SATJ,CAAP;MAUH,CAXD,MAYK;QACD,OAAO,IAAIzB,GAAJ,CAAQe,MAAM,CAACE,EAAf,EAAmBF,MAAM,CAACG,IAA1B,EAAgCH,MAAM,CAACI,UAAvC,EAAmDJ,MAAM,CAACK,EAA1D,EAA8DL,MAAM,CAACM,EAArE,CAAP;MACH;IACJ,CAhBM,CAAP;EAiBH,CAlBD;;EAoBA,oBACI;IAAK,SAAS,EAAC,SAAf;IAAA,uBACI,QAAC,eAAD;MAAiB,KAAK,EAAEV,eAAxB;MAAA,wBACI,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,WAAD;QAAkBE,QAAQ,EAAED,QAAQ;MAApC;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AASH;;GAlDuBH,O;;MAAAA,O"},"metadata":{},"sourceType":"module"}