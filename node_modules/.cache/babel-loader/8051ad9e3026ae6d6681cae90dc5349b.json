{"ast":null,"code":"var _jsxFileName = \"/home/user/project/dnditto/src/Entity/Entity.tsx\",\n    _s3 = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { MDBRow, MDBCol } from 'mdb-react-ui-kit';\nimport './Entity.scss';\nimport { EntityContext } from \"../EntityGroup/EntityGroup\";\nimport Initiative from \"../Stat/Initiative\";\nimport Health from \"../Stat/Health\";\nimport Armour from \"../Stat/Armour\";\nimport { ActivityContext } from \"../Dnditto\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Entity(props) {\n  _s3();\n\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$();\n\n  const useSelectionContext = () => {\n    _s();\n\n    const context = useContext(EntityContext);\n\n    if (!context) {\n      throw new Error(\"Entity context error\");\n    }\n\n    return context;\n  };\n\n  _s(useSelectionContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\n  const useActionContext = () => {\n    _s2();\n\n    const context = useContext(ActivityContext);\n\n    if (!context) {\n      throw new Error(\"Activity context error\");\n    }\n\n    return context;\n  };\n\n  _s2(useActionContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\n  const {\n    selectionToggle,\n    selectedEntity\n  } = useSelectionContext();\n  const {\n    currentAction,\n    setActionCallback\n  } = useActionContext();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => selectionToggle(props.id),\n    children: /*#__PURE__*/_jsxDEV(MDBRow, {\n      className: `entity d-flex justify-content-center ${selectedEntity === props.id ? currentAction : 'neutral'}`,\n      children: [/*#__PURE__*/_jsxDEV(MDBCol, {\n        md: \"2\",\n        className: \"stat\",\n        children: /*#__PURE__*/_jsxDEV(Initiative, {\n          stat: props.initiative\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n        md: \"4\",\n        className: \"name\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [props.name, \" \", props.level ? `[${props.level}]` : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n        md: \"2\",\n        className: \"stat\",\n        children: /*#__PURE__*/_jsxDEV(Health, {\n          stat: props.health\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n        md: \"2\",\n        className: \"stat\",\n        children: /*#__PURE__*/_jsxDEV(Armour, {\n          stat: props.ac\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s3(Entity, \"vKK6u/Bbrs2nA8nup8Xj9GX6f3Y=\", true);\n\n_c = Entity;\n\nvar _c;\n\n$RefreshReg$(_c, \"Entity\");","map":{"version":3,"names":["React","useContext","MDBRow","MDBCol","EntityContext","Initiative","Health","Armour","ActivityContext","Entity","props","useSelectionContext","context","Error","useActionContext","selectionToggle","selectedEntity","currentAction","setActionCallback","id","stat","initiative","name","level","health","ac"],"sources":["/home/user/project/dnditto/src/Entity/Entity.tsx"],"sourcesContent":["import React, {createContext, useContext, useMemo, useState} from 'react';\nimport { MDBRow, MDBCol } from 'mdb-react-ui-kit';\nimport './Entity.scss';\nimport {EntityContext} from \"../EntityGroup/EntityGroup\";\nimport {NavbarContext} from \"../Navbar/Navbar\";\nimport Initiative from \"../Stat/Initiative\";\nimport Health from \"../Stat/Health\";\nimport Armour from \"../Stat/Armour\";\nimport {ActivityContext} from \"../Dnditto\";\n\ninterface IEntityProps {\n    id: string;\n    name: string;\n    initiative: number;\n    health: number;\n    ac: number;\n    level?: number;\n}\n\nexport default function Entity(props: IEntityProps) {\n\n    const useSelectionContext = () => {\n        const context = useContext(EntityContext)\n        if (!context) {\n            throw new Error(\n                \"Entity context error\"\n            );\n        }\n        return context\n    }\n\n    const useActionContext = () => {\n        const context = useContext(ActivityContext)\n        if (!context) {\n            throw new Error(\n                \"Activity context error\"\n            );\n        }\n        return context\n    }\n\n    const { selectionToggle, selectedEntity } = useSelectionContext()\n    const { currentAction, setActionCallback } = useActionContext()\n\n\n    return(\n        <div onClick= { () => selectionToggle(props.id) }>\n            <MDBRow className={`entity d-flex justify-content-center ${selectedEntity === props.id ? currentAction : 'neutral'}`}>\n\n            <MDBCol md=\"2\" className=\"stat\">\n                    <Initiative {...{stat: props.initiative}} />\n                </MDBCol>\n                <MDBCol md=\"4\" className=\"name\">\n                            <span>\n                                {props.name} {props.level ? `[${props.level}]` : ''}\n                            </span>\n                </MDBCol>\n                <MDBCol md=\"2\" className=\"stat\">\n                    <Health {...{stat: props.health}} />\n                </MDBCol>\n                <MDBCol md=\"2\" className=\"stat\">\n                    <Armour {...{stat: props.ac}} />\n                </MDBCol>\n            </MDBRow>\n        </div>\n    )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAA8BC,UAA9B,QAAkE,OAAlE;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,kBAA/B;AACA,OAAO,eAAP;AACA,SAAQC,aAAR,QAA4B,4BAA5B;AAEA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,SAAQC,eAAR,QAA8B,YAA9B;;AAWA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAqC;EAAA;;EAAA;EAAA;;EAEhD,MAAMC,mBAAmB,GAAG,MAAM;IAAA;;IAC9B,MAAMC,OAAO,GAAGX,UAAU,CAACG,aAAD,CAA1B;;IACA,IAAI,CAACQ,OAAL,EAAc;MACV,MAAM,IAAIC,KAAJ,CACF,sBADE,CAAN;IAGH;;IACD,OAAOD,OAAP;EACH,CARD;;EAFgD,GAE1CD,mBAF0C;;EAYhD,MAAMG,gBAAgB,GAAG,MAAM;IAAA;;IAC3B,MAAMF,OAAO,GAAGX,UAAU,CAACO,eAAD,CAA1B;;IACA,IAAI,CAACI,OAAL,EAAc;MACV,MAAM,IAAIC,KAAJ,CACF,wBADE,CAAN;IAGH;;IACD,OAAOD,OAAP;EACH,CARD;;EAZgD,IAY1CE,gBAZ0C;;EAsBhD,MAAM;IAAEC,eAAF;IAAmBC;EAAnB,IAAsCL,mBAAmB,EAA/D;EACA,MAAM;IAAEM,aAAF;IAAiBC;EAAjB,IAAuCJ,gBAAgB,EAA7D;EAGA,oBACI;IAAK,OAAO,EAAI,MAAMC,eAAe,CAACL,KAAK,CAACS,EAAP,CAArC;IAAA,uBACI,QAAC,MAAD;MAAQ,SAAS,EAAG,wCAAuCH,cAAc,KAAKN,KAAK,CAACS,EAAzB,GAA8BF,aAA9B,GAA8C,SAAU,EAAnH;MAAA,wBAEA,QAAC,MAAD;QAAQ,EAAE,EAAC,GAAX;QAAe,SAAS,EAAC,MAAzB;QAAA,uBACQ,QAAC,UAAD;UAAiBG,IAAI,EAAEV,KAAK,CAACW;QAA7B;UAAA;UAAA;UAAA;QAAA;MADR;QAAA;QAAA;QAAA;MAAA,QAFA,eAKI,QAAC,MAAD;QAAQ,EAAE,EAAC,GAAX;QAAe,SAAS,EAAC,MAAzB;QAAA,uBACY;UAAA,WACKX,KAAK,CAACY,IADX,OACkBZ,KAAK,CAACa,KAAN,GAAe,IAAGb,KAAK,CAACa,KAAM,GAA9B,GAAmC,EADrD;QAAA;UAAA;UAAA;UAAA;QAAA;MADZ;QAAA;QAAA;QAAA;MAAA,QALJ,eAUI,QAAC,MAAD;QAAQ,EAAE,EAAC,GAAX;QAAe,SAAS,EAAC,MAAzB;QAAA,uBACI,QAAC,MAAD;UAAaH,IAAI,EAAEV,KAAK,CAACc;QAAzB;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAVJ,eAaI,QAAC,MAAD;QAAQ,EAAE,EAAC,GAAX;QAAe,SAAS,EAAC,MAAzB;QAAA,uBACI,QAAC,MAAD;UAAaJ,IAAI,EAAEV,KAAK,CAACe;QAAzB;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAbJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAqBH;;IA/CuBhB,M;;KAAAA,M"},"metadata":{},"sourceType":"module"}