{"ast":null,"code":"var _jsxFileName = \"/home/user/project/dnditto/src/Navbar/Navbar.tsx\",\n    _s = $RefreshSig$();\n\nimport { MDBBtn, MDBContainer, MDBNavbar } from \"mdb-react-ui-kit\";\nimport { createContext, useMemo, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NavbarContext = /*#__PURE__*/createContext({\n  attacking: false,\n  healing: false\n});\nexport default function Navbar() {\n  _s();\n\n  const [attacking, setAttacking] = useState(false);\n  const [healing, setHealing] = useState(false);\n\n  const toggleAttacking = () => {\n    if (healing) {\n      setHealing(!healing);\n      setAttacking(!attacking);\n    } else {\n      setAttacking(!attacking);\n    }\n  };\n\n  const toggleHealing = () => {\n    if (attacking) {\n      setAttacking(!attacking);\n      setHealing(!healing);\n    } else {\n      setHealing(!healing);\n    }\n  };\n\n  const inActionCallback = () => {};\n\n  const navbarContext = useMemo(() => ({\n    attacking,\n    healing\n  }), [attacking, healing]);\n  return /*#__PURE__*/_jsxDEV(MDBNavbar, {\n    children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n      tag: \"form\",\n      fluid: true,\n      className: \"justify-content-end\",\n      children: [/*#__PURE__*/_jsxDEV(NavbarContext.Provider, {\n        value: navbarContext,\n        children: [/*#__PURE__*/_jsxDEV(MDBBtn, {\n          outline: !attacking,\n          color: \"danger\",\n          className: \"me-2\",\n          type: \"button\",\n          onClick: () => toggleAttacking(),\n          children: \"Attack\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n          outline: !healing,\n          color: \"success\",\n          className: \"me-2\",\n          type: \"button\",\n          onClick: () => toggleHealing(),\n          children: \"Heal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(MDBBtn, {\n          outline: true,\n          color: \"info\",\n          className: \"me-2\",\n          type: \"button\",\n          children: \"Next Round\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Navbar, \"G9n0OASMRfQLCzcrgsJ1gxvf+7s=\");\n\n_c = Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["MDBBtn","MDBContainer","MDBNavbar","createContext","useMemo","useState","NavbarContext","attacking","healing","Navbar","setAttacking","setHealing","toggleAttacking","toggleHealing","inActionCallback","navbarContext"],"sources":["/home/user/project/dnditto/src/Navbar/Navbar.tsx"],"sourcesContent":["import {MDBBtn, MDBContainer, MDBNavbar} from \"mdb-react-ui-kit\";\nimport {createContext, useMemo, useState} from \"react\";\n\nexport const NavbarContext = createContext({\n    attacking: false,\n    healing: false\n})\n\nexport default function Navbar() {\n\n    const [attacking, setAttacking] = useState(false)\n    const [healing, setHealing] = useState(false)\n\n\n\n    const toggleAttacking = () => {\n        if (healing) {\n            setHealing(!healing)\n            setAttacking(!attacking)\n        } else {\n            setAttacking(!attacking)\n        }\n    }\n\n    const toggleHealing = () => {\n        if (attacking) {\n            setAttacking(!attacking)\n            setHealing(!healing)\n        } else {\n            setHealing(!healing)\n        }\n    }\n\n    const inActionCallback = (): 'healing' | '' => {\n\n    }\n\n    const navbarContext = useMemo(\n        () => ({\n            attacking,\n            healing\n        }),\n        [ attacking, healing ]\n    )\n\n    return (\n        <MDBNavbar>\n            <MDBContainer tag=\"form\" fluid className=\"justify-content-end\">\n                <NavbarContext.Provider value={navbarContext}>\n                    <MDBBtn outline={!attacking} color=\"danger\" className=\"me-2\" type=\"button\" onClick={() => toggleAttacking()}>\n                        Attack\n                    </MDBBtn>\n                    <MDBBtn outline={!healing} color=\"success\" className=\"me-2\" type=\"button\" onClick={() => toggleHealing()}>\n                        Heal\n                    </MDBBtn>\n                </NavbarContext.Provider>\n                <div>\n                    <MDBBtn outline color=\"info\" className=\"me-2\" type=\"button\">\n                        Next Round\n                    </MDBBtn>\n                </div>\n            </MDBContainer>\n        </MDBNavbar>\n    )\n}\n"],"mappings":";;;AAAA,SAAQA,MAAR,EAAgBC,YAAhB,EAA8BC,SAA9B,QAA8C,kBAA9C;AACA,SAAQC,aAAR,EAAuBC,OAAvB,EAAgCC,QAAhC,QAA+C,OAA/C;;AAEA,OAAO,MAAMC,aAAa,gBAAGH,aAAa,CAAC;EACvCI,SAAS,EAAE,KAD4B;EAEvCC,OAAO,EAAE;AAF8B,CAAD,CAAnC;AAKP,eAAe,SAASC,MAAT,GAAkB;EAAA;;EAE7B,MAAM,CAACF,SAAD,EAAYG,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACG,OAAD,EAAUG,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;;EAIA,MAAMO,eAAe,GAAG,MAAM;IAC1B,IAAIJ,OAAJ,EAAa;MACTG,UAAU,CAAC,CAACH,OAAF,CAAV;MACAE,YAAY,CAAC,CAACH,SAAF,CAAZ;IACH,CAHD,MAGO;MACHG,YAAY,CAAC,CAACH,SAAF,CAAZ;IACH;EACJ,CAPD;;EASA,MAAMM,aAAa,GAAG,MAAM;IACxB,IAAIN,SAAJ,EAAe;MACXG,YAAY,CAAC,CAACH,SAAF,CAAZ;MACAI,UAAU,CAAC,CAACH,OAAF,CAAV;IACH,CAHD,MAGO;MACHG,UAAU,CAAC,CAACH,OAAF,CAAV;IACH;EACJ,CAPD;;EASA,MAAMM,gBAAgB,GAAG,MAAsB,CAE9C,CAFD;;EAIA,MAAMC,aAAa,GAAGX,OAAO,CACzB,OAAO;IACHG,SADG;IAEHC;EAFG,CAAP,CADyB,EAKzB,CAAED,SAAF,EAAaC,OAAb,CALyB,CAA7B;EAQA,oBACI,QAAC,SAAD;IAAA,uBACI,QAAC,YAAD;MAAc,GAAG,EAAC,MAAlB;MAAyB,KAAK,MAA9B;MAA+B,SAAS,EAAC,qBAAzC;MAAA,wBACI,QAAC,aAAD,CAAe,QAAf;QAAwB,KAAK,EAAEO,aAA/B;QAAA,wBACI,QAAC,MAAD;UAAQ,OAAO,EAAE,CAACR,SAAlB;UAA6B,KAAK,EAAC,QAAnC;UAA4C,SAAS,EAAC,MAAtD;UAA6D,IAAI,EAAC,QAAlE;UAA2E,OAAO,EAAE,MAAMK,eAAe,EAAzG;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAII,QAAC,MAAD;UAAQ,OAAO,EAAE,CAACJ,OAAlB;UAA2B,KAAK,EAAC,SAAjC;UAA2C,SAAS,EAAC,MAArD;UAA4D,IAAI,EAAC,QAAjE;UAA0E,OAAO,EAAE,MAAMK,aAAa,EAAtG;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eASI;QAAA,uBACI,QAAC,MAAD;UAAQ,OAAO,MAAf;UAAgB,KAAK,EAAC,MAAtB;UAA6B,SAAS,EAAC,MAAvC;UAA8C,IAAI,EAAC,QAAnD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QATJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAmBH;;GAxDuBJ,M;;KAAAA,M"},"metadata":{},"sourceType":"module"}