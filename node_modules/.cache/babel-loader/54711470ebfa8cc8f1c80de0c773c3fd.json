{"ast":null,"code":"var _jsxFileName = \"/home/user/project/dnditto/src/Entity/Entity.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Armour } from '../Stat/Armour';\nimport { Initiative } from '../Stat/Initiative';\nimport { Health } from '../Stat/Health';\nimport { MDBRow, MDBCol } from 'mdb-react-ui-kit';\nimport './Entity.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// export class Entity extends React.Component<IEntityProps, IEntityState> {\n//\n//     constructor(props: any) {\n//         super(props);\n//         this.name = props.name;\n//         this.initiative = props.initiative;\n//         this.health = props.health;\n//         this.ac = props.ac;\n//         if(props.level) this.level = props.level;\n//         this.state = { selected: false }\n//     }\n//\n//     name: string;\n//     initiative: number;\n//     health: number;\n//     ac: number;\n//     level?: number;\n//\n//     onClick = () => {\n//         this.toggleSelect();\n//         this.props.triggerDeselect(this.props.id);\n//     }\n//\n//     toggleSelect = () => {\n//         this.setState({\n//             selected: !this.state.selected\n//         })\n//     }\n//\n//     deselect = () => {\n//         this.setState({\n//             selected: false\n//             })\n//     }\n//\n//     render() {\n//         return(\n//             <div onClick= {this.onClick}>\n//             <MDBRow className={`entity ${this.state?.selected  ? 'selected' : 'neutral'}`}>\n//                 <MDBCol md=\"2\" className=\"stat\">\n//                     <Initiative {...{stat: this.initiative}} />\n//                 </MDBCol>\n//                 <MDBCol md=\"4\" className=\"name\">\n//                             <span>\n//                                 {this.name} {this.level ? `[${this.level}]` : ''}\n//                             </span>\n//                 </MDBCol>\n//                 <MDBCol md=\"2\" className=\"stat\">\n//                     <Health {...{stat: this.health}} />\n//                 </MDBCol>\n//                 <MDBCol md=\"2\" className=\"stat\">\n//                     <Armour {...{stat: this.ac}} />\n//                 </MDBCol>\n//             </MDBRow>\n//             </div>\n//\n//         )\n//     }\n// }\nexport default function Entity(props) {\n  _s();\n\n  const [selected, setSelected] = useState(false);\n  useEffect(() => {\n    deselect();\n  }, [props.deselectTrigger]); //\n  // constructor(props: any) {\n  //     super(props);\n  //     this.name = props.name;\n  //     this.initiative = props.initiative;\n  //     this.health = props.health;\n  //     this.ac = props.ac;\n  //     if(props.level) this.level = props.level;\n  //     this.state = { selected: false }\n  // }\n\n  const onClick = () => {\n    console.debug(\"onclick\");\n    toggleSelect();\n    props.triggerDeselect(props.id);\n  };\n\n  const toggleSelect = () => {\n    setSelected(!selected);\n  };\n\n  const deselect = () => {\n    setSelected(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => onClick,\n    children: /*#__PURE__*/_jsxDEV(MDBRow, {\n      className: `entity ${selected ? 'selected' : 'neutral'}`,\n      children: [/*#__PURE__*/_jsxDEV(MDBCol, {\n        md: \"2\",\n        className: \"stat\",\n        children: /*#__PURE__*/_jsxDEV(Initiative, {\n          stat: props.initiative\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n        md: \"4\",\n        className: \"name\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [props.name, \" \", props.level ? `[${props.level}]` : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n        md: \"2\",\n        className: \"stat\",\n        children: /*#__PURE__*/_jsxDEV(Health, {\n          stat: props.health\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n        md: \"2\",\n        className: \"stat\",\n        children: /*#__PURE__*/_jsxDEV(Armour, {\n          stat: props.ac\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Entity, \"KSBcV1dpRkajmJISWfzKQoqNgQo=\");\n\n_c = Entity;\n\nvar _c;\n\n$RefreshReg$(_c, \"Entity\");","map":{"version":3,"names":["React","useEffect","useState","Armour","Initiative","Health","MDBRow","MDBCol","Entity","props","selected","setSelected","deselect","deselectTrigger","onClick","console","debug","toggleSelect","triggerDeselect","id","stat","initiative","name","level","health","ac"],"sources":["/home/user/project/dnditto/src/Entity/Entity.tsx"],"sourcesContent":["import React, {Component, useEffect, useState} from 'react';\nimport { Armour } from '../Stat/Armour';\nimport { Initiative } from '../Stat/Initiative';\nimport { Health } from '../Stat/Health';\nimport { MDBRow, MDBCol } from 'mdb-react-ui-kit';\nimport './Entity.scss';\n\ninterface IEntityProps {\n    id: string;\n    name: string;\n    initiative: number;\n    health: number;\n    ac: number;\n    level?: number;\n    triggerDeselect(id: string): void;\n    deselectTrigger: number;\n}\n\ninterface IEntityState {\n    selected: boolean;\n}\n\n// export class Entity extends React.Component<IEntityProps, IEntityState> {\n//\n//     constructor(props: any) {\n//         super(props);\n//         this.name = props.name;\n//         this.initiative = props.initiative;\n//         this.health = props.health;\n//         this.ac = props.ac;\n//         if(props.level) this.level = props.level;\n//         this.state = { selected: false }\n//     }\n//\n//     name: string;\n//     initiative: number;\n//     health: number;\n//     ac: number;\n//     level?: number;\n//\n//     onClick = () => {\n//         this.toggleSelect();\n//         this.props.triggerDeselect(this.props.id);\n//     }\n//\n//     toggleSelect = () => {\n//         this.setState({\n//             selected: !this.state.selected\n//         })\n//     }\n//\n//     deselect = () => {\n//         this.setState({\n//             selected: false\n//             })\n//     }\n//\n//     render() {\n//         return(\n//             <div onClick= {this.onClick}>\n//             <MDBRow className={`entity ${this.state?.selected  ? 'selected' : 'neutral'}`}>\n//                 <MDBCol md=\"2\" className=\"stat\">\n//                     <Initiative {...{stat: this.initiative}} />\n//                 </MDBCol>\n//                 <MDBCol md=\"4\" className=\"name\">\n//                             <span>\n//                                 {this.name} {this.level ? `[${this.level}]` : ''}\n//                             </span>\n//                 </MDBCol>\n//                 <MDBCol md=\"2\" className=\"stat\">\n//                     <Health {...{stat: this.health}} />\n//                 </MDBCol>\n//                 <MDBCol md=\"2\" className=\"stat\">\n//                     <Armour {...{stat: this.ac}} />\n//                 </MDBCol>\n//             </MDBRow>\n//             </div>\n//\n//         )\n//     }\n// }\n\n\nexport default function Entity(props: IEntityProps) {\n\n    const [selected, setSelected] = useState(false)\n    useEffect(() => {\n        deselect()\n    }, [props.deselectTrigger])\n\n    //\n    // constructor(props: any) {\n    //     super(props);\n    //     this.name = props.name;\n    //     this.initiative = props.initiative;\n    //     this.health = props.health;\n    //     this.ac = props.ac;\n    //     if(props.level) this.level = props.level;\n    //     this.state = { selected: false }\n    // }\n\n    const onClick = () => {\n        console.debug(\"onclick\")\n        toggleSelect()\n        props.triggerDeselect(props.id);\n    }\n\n    const toggleSelect = () => {\n        setSelected(!selected)\n    }\n\n    const deselect = () => {\n        setSelected(false)\n    }\n\n    return(\n        <div onClick= {() => onClick}>\n            <MDBRow className={`entity ${selected  ? 'selected' : 'neutral'}`}>\n                <MDBCol md=\"2\" className=\"stat\">\n                    <Initiative {...{stat: props.initiative}} />\n                </MDBCol>\n                <MDBCol md=\"4\" className=\"name\">\n                            <span>\n                                {props.name} {props.level ? `[${props.level}]` : ''}\n                            </span>\n                </MDBCol>\n                <MDBCol md=\"2\" className=\"stat\">\n                    <Health {...{stat: props.health}} />\n                </MDBCol>\n                <MDBCol md=\"2\" className=\"stat\">\n                    <Armour {...{stat: props.ac}} />\n                </MDBCol>\n            </MDBRow>\n        </div>\n\n    )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAA0BC,SAA1B,EAAqCC,QAArC,QAAoD,OAApD;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,kBAA/B;AACA,OAAO,eAAP;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAqC;EAAA;;EAEhD,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,KAAD,CAAxC;EACAD,SAAS,CAAC,MAAM;IACZW,QAAQ;EACX,CAFQ,EAEN,CAACH,KAAK,CAACI,eAAP,CAFM,CAAT,CAHgD,CAOhD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,OAAO,GAAG,MAAM;IAClBC,OAAO,CAACC,KAAR,CAAc,SAAd;IACAC,YAAY;IACZR,KAAK,CAACS,eAAN,CAAsBT,KAAK,CAACU,EAA5B;EACH,CAJD;;EAMA,MAAMF,YAAY,GAAG,MAAM;IACvBN,WAAW,CAAC,CAACD,QAAF,CAAX;EACH,CAFD;;EAIA,MAAME,QAAQ,GAAG,MAAM;IACnBD,WAAW,CAAC,KAAD,CAAX;EACH,CAFD;;EAIA,oBACI;IAAK,OAAO,EAAG,MAAMG,OAArB;IAAA,uBACI,QAAC,MAAD;MAAQ,SAAS,EAAG,UAASJ,QAAQ,GAAI,UAAJ,GAAiB,SAAU,EAAhE;MAAA,wBACI,QAAC,MAAD;QAAQ,EAAE,EAAC,GAAX;QAAe,SAAS,EAAC,MAAzB;QAAA,uBACI,QAAC,UAAD;UAAiBU,IAAI,EAAEX,KAAK,CAACY;QAA7B;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eAII,QAAC,MAAD;QAAQ,EAAE,EAAC,GAAX;QAAe,SAAS,EAAC,MAAzB;QAAA,uBACY;UAAA,WACKZ,KAAK,CAACa,IADX,OACkBb,KAAK,CAACc,KAAN,GAAe,IAAGd,KAAK,CAACc,KAAM,GAA9B,GAAmC,EADrD;QAAA;UAAA;UAAA;UAAA;QAAA;MADZ;QAAA;QAAA;QAAA;MAAA,QAJJ,eASI,QAAC,MAAD;QAAQ,EAAE,EAAC,GAAX;QAAe,SAAS,EAAC,MAAzB;QAAA,uBACI,QAAC,MAAD;UAAaH,IAAI,EAAEX,KAAK,CAACe;QAAzB;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QATJ,eAYI,QAAC,MAAD;QAAQ,EAAE,EAAC,GAAX;QAAe,SAAS,EAAC,MAAzB;QAAA,uBACI,QAAC,MAAD;UAAaJ,IAAI,EAAEX,KAAK,CAACgB;QAAzB;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAZJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAqBH;;GArDuBjB,M;;KAAAA,M"},"metadata":{},"sourceType":"module"}