{"ast":null,"code":"var _jsxFileName = \"/home/user/project/dnditto/src/EntityGroup/EntityGroup.tsx\",\n    _s = $RefreshSig$();\n\nimport Entity from \"../Entity/Entity\";\nimport React, { useState } from 'react';\nimport { MDBContainer } from 'mdb-react-ui-kit';\nimport EntityGroupHeader from \"../EntityGroupHeader/EntityGroupHeader\";\nimport './EntityGroup.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/*export class EntityGroup extends React.Component<IEntityGroupProps, IEntityGroupState> {\n\n    constructor(props: any) {\n        super(props)\n        this.entities = props.entities.map((c: Character) => this.renderEntity(c));\n    }\n\n    entities;\n\n    onSelectedChange(id: string): void {\n        console.debug(\"deselect all but \" + id)\n\n    }\n\n    const [deselect, doDeselect] = useState\n\n    renderEntity(c: Character) {\n        const entityProps = {\n            id: c.id,\n            name: c.name,\n            initiative: c.initiative,\n            health: c.health,\n            ac: c.ac,\n            triggerDeselect: this.onSelectedChange,\n            deselectTrigger: 0\n        }\n        return (\n            <Entity {...entityProps} />\n        )\n    }\n\n    render() {\n        return(\n            <div className=\"d-flex justify-content-center\">\n                <MDBContainer className=\"entity-group\">\n                    <div className=\"entity-group-container\">\n                        <EntityGroupHeader />\n                        <div className=\"entity-group-list\">\n                            {this.entities}\n                        </div>\n                    </div>\n                </MDBContainer>\n            </div>\n        )\n    }\n}*/\nexport default function EntityGroup(props) {\n  _s();\n\n  const [deselect, doDeselect] = useState(false);\n\n  const onSelectedChange = id => {\n    console.debug(\"deselect all but \" + entities.filter(e => e.id === id).map(e => e.name)); // entities\n    //     .filter((e: any) => e.id !== id)\n    //     .forEach((e: any) => doDeselect(!deselect))\n  };\n\n  const renderEntity = c => {\n    const entityProps = {\n      id: c.id,\n      name: c.name,\n      initiative: c.initiative,\n      health: c.health,\n      ac: c.ac,\n      triggerDeselect: onSelectedChange,\n      deselectTrigger: deselect\n    };\n    return /*#__PURE__*/_jsxDEV(Entity, { ...entityProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this);\n  };\n\n  const [entities, setEntities] = useState(props.entities.map(c => renderEntity(c)));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex justify-content-center\",\n    children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n      className: \"entity-group\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"entity-group-container\",\n        children: [/*#__PURE__*/_jsxDEV(EntityGroupHeader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"entity-group-list\",\n          children: entities\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EntityGroup, \"MO6lB/Vhn32W8x/ZSRGjx27btqs=\");\n\n_c = EntityGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EntityGroup\");","map":{"version":3,"names":["Entity","React","useState","MDBContainer","EntityGroupHeader","EntityGroup","props","deselect","doDeselect","onSelectedChange","id","console","debug","entities","filter","e","map","name","renderEntity","c","entityProps","initiative","health","ac","triggerDeselect","deselectTrigger","setEntities"],"sources":["/home/user/project/dnditto/src/EntityGroup/EntityGroup.tsx"],"sourcesContent":["import Entity from \"../Entity/Entity\";\nimport React, {Component, useState} from 'react';\nimport { MDBContainer } from 'mdb-react-ui-kit';\nimport Character from '../Models/Character';\nimport EntityGroupHeader from \"../EntityGroupHeader/EntityGroupHeader\";\nimport './EntityGroup.scss';\n\ninterface IEntityGroupProps {\n    entities: Array<Character>\n}\ninterface IEntityGroupState {}\n\n/*export class EntityGroup extends React.Component<IEntityGroupProps, IEntityGroupState> {\n\n    constructor(props: any) {\n        super(props)\n        this.entities = props.entities.map((c: Character) => this.renderEntity(c));\n    }\n\n    entities;\n\n    onSelectedChange(id: string): void {\n        console.debug(\"deselect all but \" + id)\n\n    }\n\n    const [deselect, doDeselect] = useState\n\n    renderEntity(c: Character) {\n        const entityProps = {\n            id: c.id,\n            name: c.name,\n            initiative: c.initiative,\n            health: c.health,\n            ac: c.ac,\n            triggerDeselect: this.onSelectedChange,\n            deselectTrigger: 0\n        }\n        return (\n            <Entity {...entityProps} />\n        )\n    }\n\n    render() {\n        return(\n            <div className=\"d-flex justify-content-center\">\n                <MDBContainer className=\"entity-group\">\n                    <div className=\"entity-group-container\">\n                        <EntityGroupHeader />\n                        <div className=\"entity-group-list\">\n                            {this.entities}\n                        </div>\n                    </div>\n                </MDBContainer>\n            </div>\n        )\n    }\n}*/\n\n\nexport default function EntityGroup(props: IEntityGroupProps) {\n\n    const [deselect, doDeselect] = useState(false)\n    const onSelectedChange = (id: string): void => {\n        console.debug(\"deselect all but \" + entities.filter(e => e.id === id).map(e => e.name))\n        // entities\n        //     .filter((e: any) => e.id !== id)\n        //     .forEach((e: any) => doDeselect(!deselect))\n    }\n\n    const renderEntity = (c: Character) => {\n        const entityProps = {\n            id: c.id,\n            name: c.name,\n            initiative: c.initiative,\n            health: c.health,\n            ac: c.ac,\n            triggerDeselect: onSelectedChange,\n            deselectTrigger: deselect\n        }\n        return (\n            <Entity {...entityProps} />\n        )\n    }\n\n    const [entities, setEntities] = useState(props.entities.map((c: Character) => renderEntity(c)))\n\n\n\n    return(\n        <div className=\"d-flex justify-content-center\">\n            <MDBContainer className=\"entity-group\">\n                <div className=\"entity-group-container\">\n                    <EntityGroupHeader />\n                    <div className=\"entity-group-list\">\n                        {entities}\n                    </div>\n                </div>\n            </MDBContainer>\n        </div>\n    )\n\n\n}\n"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,kBAAnB;AACA,OAAOC,KAAP,IAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,YAAT,QAA6B,kBAA7B;AAEA,OAAOC,iBAAP,MAA8B,wCAA9B;AACA,OAAO,oBAAP;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA+C;EAAA;;EAE1D,MAAM,CAACC,QAAD,EAAWC,UAAX,IAAyBN,QAAQ,CAAC,KAAD,CAAvC;;EACA,MAAMO,gBAAgB,GAAIC,EAAD,IAAsB;IAC3CC,OAAO,CAACC,KAAR,CAAc,sBAAsBC,QAAQ,CAACC,MAAT,CAAgBC,CAAC,IAAIA,CAAC,CAACL,EAAF,KAASA,EAA9B,EAAkCM,GAAlC,CAAsCD,CAAC,IAAIA,CAAC,CAACE,IAA7C,CAApC,EAD2C,CAE3C;IACA;IACA;EACH,CALD;;EAOA,MAAMC,YAAY,GAAIC,CAAD,IAAkB;IACnC,MAAMC,WAAW,GAAG;MAChBV,EAAE,EAAES,CAAC,CAACT,EADU;MAEhBO,IAAI,EAAEE,CAAC,CAACF,IAFQ;MAGhBI,UAAU,EAAEF,CAAC,CAACE,UAHE;MAIhBC,MAAM,EAAEH,CAAC,CAACG,MAJM;MAKhBC,EAAE,EAAEJ,CAAC,CAACI,EALU;MAMhBC,eAAe,EAAEf,gBAND;MAOhBgB,eAAe,EAAElB;IAPD,CAApB;IASA,oBACI,QAAC,MAAD,OAAYa;IAAZ;MAAA;MAAA;MAAA;IAAA,QADJ;EAGH,CAbD;;EAeA,MAAM,CAACP,QAAD,EAAWa,WAAX,IAA0BxB,QAAQ,CAACI,KAAK,CAACO,QAAN,CAAeG,GAAf,CAAoBG,CAAD,IAAkBD,YAAY,CAACC,CAAD,CAAjD,CAAD,CAAxC;EAIA,oBACI;IAAK,SAAS,EAAC,+BAAf;IAAA,uBACI,QAAC,YAAD;MAAc,SAAS,EAAC,cAAxB;MAAA,uBACI;QAAK,SAAS,EAAC,wBAAf;QAAA,wBACI,QAAC,iBAAD;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAK,SAAS,EAAC,mBAAf;UAAA,UACKN;QADL;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAcH;;GA3CuBR,W;;KAAAA,W"},"metadata":{},"sourceType":"module"}